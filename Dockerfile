# Используем официальный образ Python в качестве базового

FROM python:3.9

# Устанавливаем зависимости
# apt-get update: Обновляет список доступных пакетов и их версий, но не устанавливает или обновляет сами пакеты. 
# apt-get install -y: Устанавливает указанные пакеты
RUN apt-get update && apt-get install -y \
# build-essential: Пакет, который включает в себя компилятор GCC, make и 
# другие инструменты, необходимые для компиляции программного обеспечения.
    build-essential \
    # Пакет, который содержит файлы разработки для PostgreSQL. Этот пакет необходим для компиляции программ, которые взаимодействуют с PostgreSQL.
    libpq-dev \
    # Удаляет все файлы в директории /var/lib/apt/lists/. Это делается для очистки кэша пакетов и уменьшения размера образа Docker.
    && rm -rf /var/lib/apt/lists/*

# Устанавливаем рабочую директорию внутри контейнера

WORKDIR /app

# Копируем файлы requirements.txt и устанавливаем зависимости

COPY requirements.txt /app/

RUN pip install --no-cache-dir -r requirements.txt

# Копируем все файлы проекта в рабочую директорию

COPY . /app/

# Устанавливаем переменные окружения

ENV PYTHONUNBUFFERED=1

# Открываем порт 8000 для доступа к приложению

EXPOSE 8000

# Запускаем Django сервер

CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]


